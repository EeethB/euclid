// Generated by cpp11: do not edit by hand
// clang-format off

#include "euclid_types.h"
#include "cpp11/declarations.hpp"

// circle.cpp
cpp11::external_pointer<circle2> create_circle_2(cpp11::doubles x, cpp11::doubles y, cpp11::doubles r);
extern "C" SEXP _euclid_create_circle_2(SEXP x, SEXP y, SEXP r) {
  BEGIN_CPP11
    return cpp11::as_sexp(create_circle_2(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(y), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _euclid_create_circle_2(SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_euclid_create_circle_2", (DL_FUNC) &_euclid_create_circle_2, 3},
    {NULL, NULL, 0}
};
}

extern "C" void R_init_euclid(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
